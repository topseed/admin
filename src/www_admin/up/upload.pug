
p
#upload1Cont.ui.segment

	.ui.form
		h4.ui.dividing.header Upload
		.field
			label Secret
			input(type='text', name='secret', placeholder='123')

		.field
			label Target folder
			input(type='text', name='folder', placeholder='item/one')

		p Drop files here to upload.


script.
	loadjs([
		'//cdn.jsdelivr.net/npm/dropzone@5.4.0/dist/min/dropzone.min.js'
		, '//cdn.jsdelivr.net/npm/riot@3.9.1/riot.js'
	], 'dropzone' /* bundle ID */, {
		async: false //required due to loadjs bug with bundles
	})

	loadjs.ready(['site','dropzone'], function () {
		setupDZ()
	})//ready

	function setupDZ() {
		var myDropzone = new Dropzone('#upload1Cont', {
				url: '/upload',
				thumbnailWidth: 40,
				thumbnailHeight: 30
			})

	}//()

//function setupDZ() {
	var myDropzone = new Dropzone('#upload1Cont', { // Make the whole body a dropzone
		url: '/upload', // Set the url

		parallelUploads: 20,
		previewTemplate: '.previewTemplate',
		autoQueue: false, // Make sure the files aren't queued until manually added
		previewsContainer: '.previews', // Define the container to display the previews
		clickable: '.upBut' // Define the element that should be used as click trigger to select files.
	})

	myDropzone.on('addedfile', function(file) {
		// Hookup the start button
		file.previewElement.querySelector('.start').onclick = function() { myDropzone.enqueueFile(file) }
	})

	// Update the total progress bar
	myDropzone.on('totaluploadprogress', function(progress) {
		document.querySelector('#total-progress .progress-bar').style.width = progress + '%'
	})

	myDropzone.on('sending', function(file) {
		// Show the total progress bar when upload starts
		document.querySelector('#total-progress').style.opacity = '1'
		// And disable the start button
		file.previewElement.querySelector('.start').setAttribute('disabled', 'disabled')
	})

	// Hide the total progress bar when nothing's uploading anymore
	myDropzone.on('queuecomplete', function(progress) {
		document.querySelector('#total-progress').style.opacity = '0'
	})

	// setup the buttons
	// The 'add files' button doesn't need to be setup because the config
	// `clickable` has already been specified.
	document.querySelector('#actions .start').onclick = function() {
		myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
	}
	document.querySelector('#actions .cancel').onclick = function() {
		myDropzone.removeAllFiles(true)
	}
